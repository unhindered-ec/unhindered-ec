[package]
name = "push"
version = { workspace = true }
authors = { workspace = true }
description = { workspace = true }
documentation = { workspace = true }
repository = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
# Per definition crates.io compilers includes interpreters
categories = ["science", "algorithms", "compilers"]
keywords = ["push-language", "genetic-programming", "interpreter", "pushgp", "programming-language"]
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { workspace = true }
num-traits = { workspace = true }
rand = { workspace = true , features = ["alloc"] }
thiserror = { workspace = true }

ec-core = { workspace = true }
ec-linear = { workspace = true }

proptest = { workspace = true }
strum = "0.26.3"
strum_macros = "0.26.2"
embed-doc-image = "0.1.4"
push_macros = { workspace = true, optional = true }
collectable = "0.0.2"
ordered-float = { version = "4.1.1", features = ["proptest"] }
easy-cast = "0.5.2"
macro_railroad_annotation = { workspace = true }
test-strategy = { workspace = true }

[dev-dependencies]
clap = { version = "4.5.1", features = ["derive"] }

[features]
default = ["macros"]
macros = ["dep:push_macros"]

[lints]
workspace = true

[[package.metadata.example_runner.examples.smallest]]
template = "balanced"
arguments = [
  "--max-generations",
  "10",
  "--population-size",
  "200"
]

[[package.metadata.example_runner.examples.smallest]]
template = "big_population"
arguments = [
  "--max-generations",
  "1",
  "--population-size",
  "2000"
]

[[package.metadata.example_runner.examples.smallest]]
template = "many_generations"
arguments = [
  "--max-generations",
  "200",
  "--population-size",
  "10"
]
